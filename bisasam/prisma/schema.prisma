generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  acc_id             Int       @id @default(autoincrement())
  compoundId         String    @unique @map("compound_id") @db.VarChar(255)
  userId             Int       @map("user_id")
  providerType       String    @map("provider_type") @db.VarChar(255)
  providerId         String    @map("provider_id") @db.VarChar(255)
  providerAccountId  String    @map("provider_account_id") @db.VarChar(255)
  refreshToken       String?   @map("refresh_token") @db.Text
  accessToken        String?   @map("access_token") @db.Text
  accessTokenExpires DateTime? @map("access_token_expires") @db.Timestamp(6)
  createdAt          DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt          DateTime  @default(now()) @map("updated_at") @db.Timestamp(6)

  @@index([providerAccountId], name: "provider_account_id")
  @@index([providerId], name: "provider_id")
  @@index([userId], name: "user_id")
  @@map("accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map("user_id")
  expires      DateTime @db.Timestamp(6)
  sessionToken String   @unique @map("session_token") @db.VarChar(255)
  accessToken  String   @unique @map("access_token") @db.VarChar(255)
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt    DateTime @default(now()) @map("updated_at") @db.Timestamp(6)

  @@map("sessions")
}

model User {
  user_id       Int       @id @default(autoincrement())
  username      String?   @db.VarChar(255)
  email         String?   @unique @db.VarChar(255)
  emailVerified DateTime? @map("email_verified") @db.Timestamp(6)
  image         String?   @db.VarChar(255)
  bio           String?   @db.Text
  createdAt     DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt     DateTime  @default(now()) @map("updated_at") @db.Timestamp(6)

  @@map("users")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String   @db.VarChar(255)
  token      String   @unique @db.VarChar(255)
  expires    DateTime @db.Timestamp(6)
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt  DateTime @default(now()) @map("updated_at") @db.Timestamp(6)

  @@map("verification_requests")
}

model content {
  content_id   Int      @unique @default(autoincrement())
  content_text String?  @db.Text
  created_at   DateTime @default(now()) @db.Timestamp(0)
  user_id      Int
  image_id     Int?
}

model group_chat {
  group_id          Int     @unique @default(autoincrement())
  group_name        String  @db.VarChar(30)
  group_description String? @db.VarChar(255)
}

model image {
  img_id Int    @unique @default(autoincrement())
  url    String @db.VarChar(255)
}

model message {
  message_id   Int      @unique @default(autoincrement())
  created_at   DateTime @default(now()) @db.Timestamp(0)
  text_message String   @db.VarChar(255)
  user_id      Int
  group_id     Int
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model user1_blocked_user2 {
  user_id_1 Int
  user_id_2 Int

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model user1_follows_user2 {
  user_id_1 Int
  user_id_2 Int

  @@ignore
}

model user_comment {
  comment_id   Int      @unique @default(autoincrement())
  content_id   Int
  comment_text String   @db.VarChar(255)
  created_at   DateTime @default(now()) @db.Timestamp(0)
  user_id      Int
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model user_creates_group {
  user_id  Int
  group_id Int

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model user_in_group {
  user_id  Int
  group_id Int

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model user_liked_comment {
  user_id    Int
  comment_id Int

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model user_liked_content {
  user_id    Int
  content_id Int

  @@ignore
}
